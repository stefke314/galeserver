<?xml version="1.0" encoding="UTF-8"?>
<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:gale="http://gale.tue.nl/adaptation">
	
<gale:object data="gale:AIGG/xml/header.xhtml"/>

<div class="content">

	<!-- This page contains the complete instructions for installing a system -->
	<h1>Installation of <gale:variable expr="${->(system)?title}"/> on <gale:variable expr="${->(forOS)?title}"/></h1>


	<p>
	Please follow the installation instructions below.<br/>
	Systems you already have installed will not be shown by default.
	</p>

	<!-- all the systems this depends on -->
	<gale:for var="dependency" expr="${->(system)->(depends)}">
		<gale:for var="install" expr="${%dependency&lt;-(system)}">
			<gale:if expr="${%install->(forOS)}[0].equals(${->(forOS)}[0])">
				<gale:then>
					<gale:object>
						<gale:attr-variable name="name" expr="${%install->(info)}[0].getUri()"/>
					</gale:object>
				</gale:then>
			</gale:if>
		</gale:for>
	</gale:for>


	<!-- plus the system itself -->
	<gale:for var="install" expr="${->(system)&lt;-(system)}">
		<gale:if expr="${%install->(forOS)}[0].equals(${->(forOS)}[0])">
			<gale:then>
				<gale:object>
					<gale:attr-variable name="name" expr="${%install->(info)}[0].getUri()"/>
				</gale:object>
			</gale:then>
		</gale:if>
	</gale:for>
	
</div>

<!-- small gale code functions to increase and decrease the prefersThumbnails attribute -->
<gale:a id="decrease-prefers-thumbnails" href="" exec="#{global#prefersThumbnails, ${global#prefersThumbnails} - 1};" />
<gale:a id="increase-prefers-thumbnails" href="" exec="#{global#prefersThumbnails, ${global#prefersThumbnails} + 1};" />

<script>
	/**
	 * Callback function for when thumbnails become checked
	 * checked - true if the thumbnail became checked, false if it became unchecked
	 */
	function onThumbnailCheck(checked) {
		if (checked)
			callAsync("increase-prefers-thumbnails");
		else
			callAsync("decrease-prefers-thumbnails");
	}
	
	/** 
	 * Calls the link from the given hrefholder asynchronuous.
	 * hrefholder - the id of the object to call the href attribrute of.
	 */
	function callAsync(hrefholder) {
		
		// getting the link to call
		element = document.getElementById(hrefholder);
		href = element.attributes.getNamedItem("href").value;
		
		// calling the url
		var xmlhttp = new XMLHttpRequest();
		xmlhttp.open("GET", href, true);
		xmlhttp.send();
	}
</script>
</html>