/*

	This file is part of GALE (Generic Adaptation Language and Engine).

    GALE is free software: you can redistribute it and/or modify it under the 
    terms of the GNU Lesser General Public License as published by the Free 
    Software Foundation, either version 3 of the License, or (at your option) 
    any later version.

    GALE is distributed in the hope that it will be useful, but WITHOUT ANY 
    WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS 
    FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for 
    more details.

    You should have received a copy of the GNU Lesser General Public License
    along with GALE. If not, see <http://www.gnu.org/licenses/>.
    
 */
/**
 * SaveFile.java
 * Last modified: $Date$
 * In revision:   $Revision$
 * Modified by:   $Author$
 *
 * Copyright (c) 2008-2011 Eindhoven University of Technology.
 * All Rights Reserved.
 *
 * This software is proprietary information of the Eindhoven University
 * of Technology. It may be used according to the GNU LGPL license.
 */
package nl.tue.gale.tools.servlets;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.net.URLDecoder;
import java.util.Vector;

import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import nl.tue.gale.tools.AHAStatic;
import nl.tue.gale.tools.config.AhaAuthor;
import nl.tue.gale.tools.config.AuthorsConfig;

public class SaveFile extends HttpServlet {
	private String filename;

	/**
	 * Initializes the servlet
	 * 
	 * @param config
	 *            the <code>ServletConfig</code>
	 * @throws ServletException
	 */
	public void init(ServletConfig config) throws ServletException {
		super.init(config);
	}

	/**
	 * Overrides the <code>service</code> from <code>HttpServlet</code>
	 * 
	 * @param request
	 *            the <code>HttpServletRequest</code>
	 * @param response
	 *            the <code>HttpServletResponse</code>
	 * @throws IOException
	 *             generated by <code>doPost</code>
	 * @throws ServletException
	 *             when something goes wrong with servlet
	 */
	public void service(HttpServletRequest request, HttpServletResponse response)
			throws IOException, ServletException {
		HttpSession session = request.getSession(true);

		if (session != null) {
			synchronized (session.getId()) {
				try {
					doPost(request, response);
				} catch (ServletException se) {
					System.out.println("ServletException");
				} catch (IOException ie) {
					System.out.println("IOException");
				}
			}
		}
	}

	/**
	 * Overrides the <code>doPost</code> from <code>HttpServlet</code>
	 * 
	 * @param request
	 *            the <code>HttpServletRequest</code>
	 * @param response
	 *            the <code>HttpServletResponse</code>
	 * @throws IOException
	 *             when something goes wrong with writing to file
	 * @throws ServletException
	 *             when something goes wrong with servlet
	 */
	public void doPost(HttpServletRequest request, HttpServletResponse response)
			throws java.io.IOException, ServletException {

		final String userName = request.getParameter("userName").trim();

		String xmlFile = URLDecoder.decode(request.getParameter("xmlFile"),
				"UTF-8");
		int startIndex = xmlFile.indexOf("[") + 1;
		int endIndex = xmlFile.indexOf("]");
		String fileName = xmlFile.substring(startIndex, endIndex);

		int startData = xmlFile.indexOf("\n") + 1;
		String xmlData = xmlFile.substring(startData);

		File file = new File(fileName);
		try {

			String aharoot = (String) nl.tue.gale.tools.AHAStatic.config(
					getServletContext()).Get("AHAROOT");
			// changed by Natalia Stash, 15-07-2003
			// String graphauthorfiles = (String)
			// nl.tue.gale.tools.AHAStatic.config.Get("graphauthorfiles");
			String graphauthorfiles = (String) AHAStatic.AUTHORFILESPATH;

			String filen = "";

			if (userName != null) {
				// changed by Natalia Stash, 15-07-2003
				// filen = aharoot + graphauthorfiles + userName + "\\" +
				// fileName;
				filen = aharoot + graphauthorfiles.substring(1) + userName
						+ "/" + fileName;
			} else {
				filen = aharoot + graphauthorfiles + fileName;
			}

			FileWriter out = new FileWriter(filen);

			out.write(xmlData);
			out.close();
		} catch (Exception e) {
			System.out.println("Exception while trying to save!");
		}
		// export to AHA!
		if (fileName.trim().equals("savetoaha.aha"))
			;
		if ((fileName.indexOf(".aha") > 0) || (fileName.indexOf(".frm") > 0)) {

			this.setAuthor(userName, fileName);
		}

	}

	public void setAuthor(String authorname, String course) {

		AuthorsConfig aconfig = new AuthorsConfig(getServletContext());
		AhaAuthor author = aconfig.GetAuthor(authorname);
		Vector courses = author.getCourseList();

		course = course.replaceAll(".aha", "");
		course = course.replaceAll(".frm", "");

		if (!courses.contains(course)) {
			courses.add(course);
			author.setCourseList(courses);

		}
		aconfig.StoreConfig();

	}

}